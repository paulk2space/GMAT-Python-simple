StopCondition.Validate(), from line 1295:

if (mAllowGoalParam && mGoalParam == NULL)
      throw StopConditionException
         ("StopCondition::Validate() goal parameter: " + rhsString +
          " has NULL pointer.\n");

mAllowGoalParam is false by default (must equate to NULL)
mAllowGoalParam can be set by:
- SetRhsString(), which is called by:
	- SetStringParameter('Goal', val)

mGoalParam is NULL by default
mGoalParam can be set by:
- SetGoalParameter(), which is called by:
	- SetRefObject() when type arg is gmat.PARAMETER and name arg is equal to rhsString

rhsString is 0.0 by default

Therefore, to avoid goal parameter null pointer exception:
1) Set rhsString with SetStringParameter('Goal', self.goal)
2) Set mGoalParam with self.SetRefObject(self.goal_param, gmat.PARAMETER, self.goal)

----------------------------------------------------------------------

mEccParam is NULL by default

----------------------------------------------------------------------

"Unable to interpolate a stop epoch" exception thrown by StopCondition.GetStopEpoch():

	if (mInterpolator->Interpolate(currentGoalValue, &stopEpoch))
	      mStopEpoch = stopEpoch;
	else
	      throw StopConditionException("Unable to interpolate a stop epoch");

Triggered when NotAKnotInterpolator.Interpolate() returns non-true.
Assessing Interpolate()'s arguments:
currentGoalValue (Real):
	- default: goal (Real, defaults to ...)
	- set by: Evaluate()

stopEpoch:
	- checkable with:
	- set by:

StopCondition.GetStopEpoch() called by:
- Propagate.CheckStopConditions(), called by:
    - Propagate.Execute() (line 4713), called by:
			- Sandbox.Execute() -> Moderator.ExecuteSandbox() -> Moderator.RunMission()

- Propagate.InterpolateToStop(), called by:
	- Propagate.TakeFinalStep() (line 4890) if stop_cond not IsTimeCondition(), called by:
		- Propagate.Execute(), called by:
			- Sandbox.Execute() -> Moderator.ExecuteSandbox() -> Moderator.RunMission()


StopCondition.Initialize() gets stop parameter type but then doesn't use it - assesses mStopParamType instead of paramTypeName:
   std::string paramTypeName = mStopParam->GetTypeName();

   #ifdef DEBUG_STOPCOND_INIT
   MessageInterface::ShowMessage("   Calling Validate()\n");
   #endif
   if (Validate())
   {
      if (mStopParamType == "Apoapsis" ||
          mStopParamType == "Periapsis")
      {
